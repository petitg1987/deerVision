name: CI Pipeline

on:
  push:
    branches:
      - '**'

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT on AWS

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'

      - name: Build JAR
        if: github.ref == 'refs/heads/master'
        run: mvn -B clean package --file ./deer-vision-backend/pom.xml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::496124100072:role/deervisionGitHubAction
          aws-region: eu-central-1

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v2
#
#      - name: Build, tag, and push docker image to Amazon ECR
#        env:
#          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          REPOSITORY: deer-vision-repo
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG






      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.ref == 'refs/heads/master'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/master'
        run: |
          cd ./deer-vision-backend/
          APP_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          cd ./deploy/
          cp ../target/deer-vision*.jar ./deer-vision.jar
          docker build -t ghcr.io/${{ github.repository_owner }}/deer-vision:$APP_VERSION .
          docker push ghcr.io/${{ github.repository_owner }}/deer-vision:$APP_VERSION
